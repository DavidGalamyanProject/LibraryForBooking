// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopWebApi.Data.EntityFramework;

namespace ShopWebApi.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ShopWebApi.Model.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ProductInformation")
                        .HasColumnType("text")
                        .HasColumnName("ProductInformation");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("ProductName");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ShopWebApi.Model.Entity.Reserv", b =>
                {
                    b.Property<Guid>("IdOrder")
                        .HasColumnType("uuid")
                        .HasColumnName("IdOrder");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Qantity");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ReservationTime");

                    b.HasKey("IdOrder");

                    b.HasIndex("ProductId");

                    b.ToTable("reserved");
                });

            modelBuilder.Entity("ShopWebApi.Model.Entity.StockPosition", b =>
                {
                    b.Property<Guid>("VendorCode")
                        .HasColumnType("uuid")
                        .HasColumnName("VendorCode");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Qantity");

                    b.HasKey("VendorCode");

                    b.HasIndex("ProductId");

                    b.ToTable("warehouse");
                });

            modelBuilder.Entity("ShopWebApi.Model.Entity.Reserv", b =>
                {
                    b.HasOne("ShopWebApi.Model.Entity.Product", "Product")
                        .WithMany("Reserve")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopWebApi.Model.Entity.StockPosition", b =>
                {
                    b.HasOne("ShopWebApi.Model.Entity.Product", "Product")
                        .WithMany("Warehouse")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopWebApi.Model.Entity.Product", b =>
                {
                    b.Navigation("Reserve");

                    b.Navigation("Warehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
